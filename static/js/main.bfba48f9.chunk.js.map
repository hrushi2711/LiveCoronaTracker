{"version":3,"sources":["components/StatsCounter.js","components/Footer.js","components/Datatable.js","pages/Home.js","pages/About.js","Nav.js","App.js","index.js"],"names":["StatsCounter","useState","latest","setLatest","results","setResults","searchCountries","setSearchCountries","loading","setLoading","useEffect","axios","all","get","then","resonseArr","data","catch","err","console","log","lastUpdated","Date","parseInt","updated","toString","countries","filter","item","country","includes","map","i","Card","key","bg","text","className","style","margin","Img","variant","src","countryInfo","flag","Body","Title","Text","cases","deaths","recovered","todayCases","todayDeaths","active","critical","display","justifyContent","size","color","CardDeck","displayType","value","thousandSeparator","fontSize","Footer","Form","Group","controlId","Control","type","placeholder","onChange","e","target","Container","Row","Col","queries","columns","query","myArray","Datatable","datam","setDatam","response","obj","statewise","raw","Object","values","length","push","process","localData","marginTop","id","dataSource","allowPaging","pageSettings","pageCount","field","headerText","textAlign","width","services","Page","Home","align","About","Nav","textDecoration","to","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAkLeA,EAnKM,WAAO,IAAD,EACGC,mBAAS,IADZ,mBAClBC,EADkB,KACVC,EADU,OAEKF,mBAAS,IAFd,mBAElBG,EAFkB,KAETC,EAFS,OAGqBJ,mBAAS,IAH9B,mBAGlBK,EAHkB,KAGDC,EAHC,OAIKN,oBAAS,GAJd,mBAIlBO,EAJkB,KAITC,EAJS,KAMzBC,qBAAU,WACRC,IACGC,IAAI,CACHD,IAAME,IAAI,6BACVF,IAAME,IAAI,qCAEXC,MAAK,SAACC,GACLZ,EAAUY,EAAW,GAAGC,MACxBX,EAAWU,EAAW,GAAGC,MACzBP,GAAW,MAEZQ,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAEH,IACMG,EADO,IAAIC,KAAKC,SAASrB,EAAOsB,UACbC,WAUnBC,EAPkBtB,EAAQuB,QAAO,SAACC,GACtC,MAA2B,KAApBtB,EACHsB,EAAKC,QAAQC,SAASxB,GACtBsB,KAI4BG,KAAI,SAACf,EAAMgB,GAC3C,OACE,kBAACC,EAAA,EAAD,CACEC,IAAKF,EACLG,GAAG,QACHC,KAAK,OACLC,UAAU,cACVC,MAAO,CAAEC,OAAQ,SAEjB,kBAACN,EAAA,EAAKO,IAAN,CAAUC,QAAQ,MAAMC,IAAK1B,EAAK2B,YAAYC,OAC9C,kBAACX,EAAA,EAAKY,KAAN,KACE,kBAACZ,EAAA,EAAKa,MAAN,KAAa9B,EAAKa,SAClB,kBAACI,EAAA,EAAKc,KAAN,cAAkB/B,EAAKgC,OACvB,kBAACf,EAAA,EAAKc,KAAN,eAAmB/B,EAAKiC,QACxB,kBAAChB,EAAA,EAAKc,KAAN,kBAAsB/B,EAAKkC,WAC3B,kBAACjB,EAAA,EAAKc,KAAN,sBAA0B/B,EAAKmC,YAC/B,kBAAClB,EAAA,EAAKc,KAAN,uBAA2B/B,EAAKoC,aAChC,kBAACnB,EAAA,EAAKc,KAAN,eAAmB/B,EAAKqC,QACxB,kBAACpB,EAAA,EAAKc,KAAN,iBAAqB/B,EAAKsC,eAkBlC,OACE,6BACE,yBAAKhB,MAAO,CAAEiB,QAAS,OAAQC,eAAgB,WAC7C,kBAAC,IAAD,CAAaC,KAAM,GAAIC,MAAO,OAAQlD,QAASA,KAEjD,kBAACmD,EAAA,EAAD,KACE,kBAAC1B,EAAA,EAAD,CACEE,GAAG,YACHC,KAAK,QACLC,UAAU,cACVC,MAAO,CAAEC,OAAQ,SAEjB,kBAACN,EAAA,EAAKY,KAAN,KACE,kBAACZ,EAAA,EAAKa,MAAN,oBACA,kBAACb,EAAA,EAAKc,KAAN,KACE,kBAAC,IAAD,CACEa,YAAa,OACbC,MAAO3D,EAAO8C,MACdc,mBAAmB,EACnBxB,MAAO,CAAEyB,SAAU,YAIzB,kBAAC9B,EAAA,EAAK+B,OAAN,KACE,+CAAqB3C,KAGzB,kBAACY,EAAA,EAAD,CACEE,GAAG,SACHC,KAAK,QACLC,UAAU,cACVC,MAAO,CAAEC,OAAQ,SAEjB,kBAACN,EAAA,EAAKY,KAAN,KACE,kBAACZ,EAAA,EAAKa,MAAN,qBACA,kBAACb,EAAA,EAAKc,KAAN,KACE,kBAAC,IAAD,CACEa,YAAa,OACbC,MAAO3D,EAAO+C,OACda,mBAAmB,EACnBxB,MAAO,CAAEyB,SAAU,YAIzB,kBAAC9B,EAAA,EAAK+B,OAAN,KACE,+CAAqB3C,KAGzB,kBAACY,EAAA,EAAD,CACEE,GAAG,UACHC,KAAK,QACLC,UAAU,cACVC,MAAO,CAAEC,OAAQ,SAEjB,kBAACN,EAAA,EAAKY,KAAN,KACE,kBAACZ,EAAA,EAAKa,MAAN,wBACA,kBAACb,EAAA,EAAKc,KAAN,KACE,kBAAC,IAAD,CACEa,YAAa,OACbC,MAAO3D,EAAOgD,UACdY,mBAAmB,EACnBxB,MAAO,CAAEyB,SAAU,YAIzB,kBAAC9B,EAAA,EAAK+B,OAAN,KACE,+CAAqB3C,MAI3B,kBAAC4C,EAAA,EAAD,KACE,yBAAK5B,UAAU,kBACb,kBAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,mBACpB,kBAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACLC,YAAY,mBACZC,SAAU,SAACC,GAAD,OAAOjE,EAAmBiE,EAAEC,OAAOZ,aAKrD,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAKvC,UAAU,kBACb,kBAAC,IAAD,CAASwC,QAhGP,CACZ,CACEC,QAAS,EACTC,MAAO,oBAET,CACED,QAAS,EACTC,MAAO,uBAyF6BrD,SC/J3BsC,MARf,WACE,OACE,6BACE,wE,2CCMFgB,EAAU,GAoICC,EAnIG,WAAO,IAAD,EACIhF,mBAAS,IADb,mBACfiF,EADe,KACRC,EADQ,KAKtBzE,qBAAU,WACRC,IACGE,IAAI,0CACJC,MAAK,SAACsE,GACLD,EAASC,GAoBf,SAAiBC,GAAM,IACbC,EAAcD,EAAdC,UACRnE,QAAQC,IAAI,wBAA0BkE,GACtC,IAAMC,EAAMC,OAAOC,OAAOH,GAC1BnE,QAAQC,IAAImE,EAAI,IAGhB,IAAK,IAAIvD,EAAI,EAAGA,EAAIuD,EAAIG,OAAQ1D,IAC9BgD,EAAQW,KAAKJ,EAAIvD,IA3Bf4D,CAAQR,EAASpE,SAKlBC,OAAM,SAACC,GACNC,QAAQC,IAAI,kBAAoBF,QAEnC,IAEH,IAAM2E,EAAYX,EA8ClB,OA7CA/D,QAAQC,IAAI,WAAayE,GA8CvB,yBAAKvD,MAAO,CAAEC,OAAQ,KAAMuD,UAAW,MAAQzD,UAAU,gBACvD,kBAAC,IAAD,CACE0D,GAAG,OACHC,WAAYhB,EACZiB,aAAa,EACbC,aAAc,CAAEC,UAAW,KAE3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,QACNC,WAAW,QACXC,UAAU,OACVC,MAAM,OAER,kBAAC,IAAD,CACEH,MAAM,SACNC,WAAW,SACXC,UAAU,OACVC,MAAM,OAER,kBAAC,IAAD,CACEH,MAAM,YACNC,WAAW,YACXC,UAAU,OACVC,MAAM,OAER,kBAAC,IAAD,CACEH,MAAM,YACNC,WAAW,YACXC,UAAU,OACVC,MAAM,OAER,kBAAC,IAAD,CACEH,MAAM,SACNC,WAAW,SACXC,UAAU,OACVC,MAAM,OAER,kBAAC,IAAD,CACEH,MAAM,kBACNC,WAAW,oBACXC,UAAU,OACVC,MAAM,OAER,kBAAC,IAAD,CACEH,MAAM,iBACNC,WAAW,kBACXC,UAAU,OACVC,MAAM,OAER,kBAAC,IAAD,CACEH,MAAM,cACNC,WAAW,eACXC,UAAU,OACVC,MAAM,QAIV,kBAAC,IAAD,CAAQC,SAAU,CAACC,UCvHZC,MAZf,WACE,OACE,6BACE,wBAAIC,MAAM,UAAV,uBADF,IAC8C,6BAC5C,kBAAC,EAAD,MACA,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCISC,MAdf,WACE,OACE,6BACE,yCACA,yBAAKvE,UAAU,QACb,wI,QCgBOwE,EArBH,WACV,OACE,6BACE,kBAAC,IAAD,CACEvE,MAAO,CAAEoB,MAAO,QAASoD,eAAgB,QACzCC,GAAG,sBAEH,yBAAKzE,MAAO,CAAEyB,SAAU,SAAxB,kBAEF,wBAAI1B,UAAU,aACZ,kBAAC,IAAD,CACEC,MAAO,CAAEoB,MAAO,QAASoD,eAAgB,OAAQhB,UAAW,QAC5DiB,GAAG,UAEH,yD,QCIKC,MAdf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,qBAAqBC,UAAWT,IAClD,kBAAC,IAAD,CAAOQ,KAAK,SAASC,UAAWP,QCT1CQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.bfba48f9.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport Columns from \"react-columns\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ClockLoader from \"react-spinners/ClockLoader\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\n// import App from \"../App.js\";\r\n\r\nconst StatsCounter = () => {\r\n  const [latest, setLatest] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n  const [searchCountries, setSearchCountries] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .all([\r\n        axios.get(\"https://disease.sh/v2/all\"),\r\n        axios.get(\"https://disease.sh/v2/countries\"),\r\n      ])\r\n      .then((resonseArr) => {\r\n        setLatest(resonseArr[0].data);\r\n        setResults(resonseArr[1].data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const date = new Date(parseInt(latest.updated));\r\n  const lastUpdated = date.toString();\r\n  // const newLastDate = date.toLocaleString();\r\n\r\n  const filterCountries = results.filter((item) => {\r\n    return searchCountries !== \"\"\r\n      ? item.country.includes(searchCountries)\r\n      : item;\r\n  });\r\n\r\n  //Reusuable Component\r\n  const countries = filterCountries.map((data, i) => {\r\n    return (\r\n      <Card\r\n        key={i}\r\n        bg=\"light\"\r\n        text=\"dark\"\r\n        className=\"text-center\"\r\n        style={{ margin: \"10px\" }}\r\n      >\r\n        <Card.Img variant=\"top\" src={data.countryInfo.flag} />\r\n        <Card.Body>\r\n          <Card.Title>{data.country}</Card.Title>\r\n          <Card.Text>Cases {data.cases}</Card.Text>\r\n          <Card.Text>Deaths {data.deaths}</Card.Text>\r\n          <Card.Text>Recovered {data.recovered}</Card.Text>\r\n          <Card.Text>Today's Cases {data.todayCases}</Card.Text>\r\n          <Card.Text>Today's Deaths {data.todayDeaths}</Card.Text>\r\n          <Card.Text>Active {data.active}</Card.Text>\r\n          <Card.Text>Critical {data.critical}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  });\r\n\r\n  //responsive columns for countries\r\n  var queries = [\r\n    {\r\n      columns: 2,\r\n      query: \"min-width: 500px\",\r\n    },\r\n    {\r\n      columns: 3,\r\n      query: \"min-width: 1000px\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <ClockLoader size={50} color={\"blue\"} loading={loading} />\r\n      </div>\r\n      <CardDeck>\r\n        <Card\r\n          bg=\"secondary\"\r\n          text=\"white\"\r\n          className=\"text-center\"\r\n          style={{ margin: \"10px\" }}\r\n        >\r\n          <Card.Body>\r\n            <Card.Title>Total Cases</Card.Title>\r\n            <Card.Text>\r\n              <NumberFormat\r\n                displayType={\"text\"}\r\n                value={latest.cases}\r\n                thousandSeparator={true}\r\n                style={{ fontSize: \"35px\" }}\r\n              />\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small>Last updated {lastUpdated}</small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card\r\n          bg=\"danger\"\r\n          text=\"white\"\r\n          className=\"text-center\"\r\n          style={{ margin: \"10px\" }}\r\n        >\r\n          <Card.Body>\r\n            <Card.Title>Total Deaths</Card.Title>\r\n            <Card.Text>\r\n              <NumberFormat\r\n                displayType={\"text\"}\r\n                value={latest.deaths}\r\n                thousandSeparator={true}\r\n                style={{ fontSize: \"35px\" }}\r\n              />\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small>Last updated {lastUpdated}</small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card\r\n          bg=\"success\"\r\n          text=\"white\"\r\n          className=\"text-center\"\r\n          style={{ margin: \"10px\" }}\r\n        >\r\n          <Card.Body>\r\n            <Card.Title>Total Recovered</Card.Title>\r\n            <Card.Text>\r\n              <NumberFormat\r\n                displayType={\"text\"}\r\n                value={latest.recovered}\r\n                thousandSeparator={true}\r\n                style={{ fontSize: \"35px\" }}\r\n              />\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small>Last updated {lastUpdated}</small>\r\n          </Card.Footer>\r\n        </Card>\r\n      </CardDeck>\r\n      <Form>\r\n        <div className=\"container mt-5\">\r\n          <Form.Group controlId=\"formGroupSearch\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Search a country\"\r\n              onChange={(e) => setSearchCountries(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n      </Form>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <div className=\"columns-scroll\">\r\n              <Columns queries={queries}>{countries}</Columns>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatsCounter;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div>\r\n      <p>Created by Hrushikesh Tiwari - 05/2020 </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\n// import mydata from \"./mydata.json\";\r\nimport {\r\n  GridComponent,\r\n  ColumnDirective,\r\n  ColumnsDirective,\r\n  Page,\r\n  Inject,\r\n} from \"@syncfusion/ej2-react-grids\";\r\nvar myArray = [];\r\nconst Datatable = () => {\r\n  const [datam, setDatam] = useState([]);\r\n\r\n  // console.log(mydata);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://api.covid19india.org/data.json\")\r\n      .then((response) => {\r\n        setDatam(response);\r\n        process(response.data);\r\n        // const dataObject = response.data;\r\n        // console.log(response.data);\r\n        // dataProcessing(dataObject);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Got ERROR :::::\" + err);\r\n      });\r\n  }, []);\r\n\r\n  const localData = datam;\r\n  console.log(\"NEW API \" + localData);\r\n  // console.log(\"NEW  cases_time_series API \" + localData.cases_time_series);\r\n\r\n  // const {\r\n  //   statewise: { deaths },\r\n  // } = datam;\r\n  // console.log(\"state \" + localData.statewise[0]);\r\n\r\n  function process(obj) {\r\n    const { statewise } = obj;\r\n    console.log(\"process function obj \" + statewise);\r\n    const raw = Object.values(statewise);\r\n    console.log(raw[1]);\r\n    // myArray.push(raw[1]);\r\n    // myArray.push(raw[2]);\r\n    for (var i = 0; i < raw.length; i++) {\r\n      myArray.push(raw[i]);\r\n    }\r\n\r\n    // for (var prop in statewise) {\r\n    //   if (statewise.hasOwnProperty(prop)) {\r\n    //     // or if (Object.prototype.hasOwnProperty.call(obj,prop)) for safety...\r\n    //     console.log(\"prop: \" + prop + \" value: \" + obj[prop]);\r\n    //   }\r\n    // }\r\n    // var state = statewise.map(function (item) {\r\n    //   return item.state;\r\n    // });\r\n    // var active = statewise.map(function (item) {\r\n    //   return item.active;\r\n    // });\r\n    // var confirmed = statewise.map(function (item) {\r\n    //   return item.confirmed;\r\n    // });\r\n    // var deaths = statewise.map(function (item) {\r\n    //   return item.deaths;\r\n    // });\r\n    // myArray.push(state);\r\n\r\n    // console.log(\"stateis \" + JSON.stringify(myArray));\r\n    // for (let [key, value] of Object.entries(statewise)) {\r\n    //   console.log(`${key}: ${value}`);\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: \"5%\", marginTop: \"5%\" }} className=\"control-pane\">\r\n      <GridComponent\r\n        id=\"Grid\"\r\n        dataSource={myArray}\r\n        allowPaging={true}\r\n        pageSettings={{ pageCount: 15 }}\r\n      >\r\n        <ColumnsDirective>\r\n          <ColumnDirective\r\n            field=\"state\"\r\n            headerText=\"State\"\r\n            textAlign=\"Left\"\r\n            width=\"60\"\r\n          />\r\n          <ColumnDirective\r\n            field=\"active\"\r\n            headerText=\"Active\"\r\n            textAlign=\"Left\"\r\n            width=\"60\"\r\n          />\r\n          <ColumnDirective\r\n            field=\"confirmed\"\r\n            headerText=\"Confirmed\"\r\n            textAlign=\"Left\"\r\n            width=\"60\"\r\n          />\r\n          <ColumnDirective\r\n            field=\"recovered\"\r\n            headerText=\"Recovered\"\r\n            textAlign=\"Left\"\r\n            width=\"60\"\r\n          />\r\n          <ColumnDirective\r\n            field=\"deaths\"\r\n            headerText=\"Deaths\"\r\n            textAlign=\"Left\"\r\n            width=\"60\"\r\n          />\r\n          <ColumnDirective\r\n            field=\"lastupdatedtime\"\r\n            headerText=\"Last Updated Time\"\r\n            textAlign=\"Left\"\r\n            width=\"60\"\r\n          />\r\n          <ColumnDirective\r\n            field=\"deltaconfirmed\"\r\n            headerText=\"Delta Confirmed\"\r\n            textAlign=\"Left\"\r\n            width=\"60\"\r\n          />\r\n          <ColumnDirective\r\n            field=\"deltadeaths\"\r\n            headerText=\"Delta Deaths\"\r\n            textAlign=\"Left\"\r\n            width=\"60\"\r\n          />\r\n        </ColumnsDirective>\r\n\r\n        <Inject services={[Page]} />\r\n      </GridComponent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Datatable;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport StatsCounter from \"../components/StatsCounter\";\r\nimport Footer from \"../components/Footer\";\r\nimport Datatable from \"../components/Datatable\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <h3 align=\"center\">COVID-19 LIVE STATS</h3> <br></br>\r\n      <StatsCounter></StatsCounter>\r\n      <hr></hr>\r\n      <Datatable />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n// import React, { Component } from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h2>About Us </h2>\r\n      <div className=\"main\">\r\n        <h4>\r\n          This project is created to track covid-19 stats by Hrushikesh. A\r\n          software Enginner and web developer.\r\n        </h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav>\r\n      <Link\r\n        style={{ color: \"white\", textDecoration: \"none\" }}\r\n        to=\"/LiveCoronaTracker\"\r\n      >\r\n        <div style={{ fontSize: \"25px\" }}>🏠 </div>\r\n      </Link>\r\n      <ul className=\"nav-links\">\r\n        <Link\r\n          style={{ color: \"white\", textDecoration: \"none\", marginTop: \"15px\" }}\r\n          to=\"/about\"\r\n        >\r\n          <li> 📝About Us</li>\r\n        </Link>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Home from \"./pages/Home\";\r\nimport About from \"./pages/About\";\r\nimport Nav from \"./Nav\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Nav />\r\n        <Switch>\r\n          <Route exact path=\"/LiveCoronaTracker\" component={Home} />\r\n          <Route path=\"/about\" component={About} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}